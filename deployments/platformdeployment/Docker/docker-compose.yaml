# use this with `docker-compose up` against a generic Docker end-point (e.g. standalone Docker)
version: "3.0"
services:
  yelb-ui:
    image: ${DOCKER_REPO}/yelb-ui:${YELB_UI_TAG}
    build:
      context: ../../../yelb-ui
      dockerfile: Dockerfile
    depends_on:
      - yelb-appserver
    ports:
      - 80:80
    networks:
      - yelb-network

  yelb-appserver:
    image: ${DOCKER_REPO}/yelb-appserver:${YELB_APPSERVER_TAG}
    depends_on:
      - redis-server
      - yelb-db
    networks:
      - yelb-network

  redis-server:
    image: redis:${REDIS_TAG}
    networks:
      - yelb-network
    # uncomment the following lines if you want to persist redis data across deployments
    #volumes:
    # - redisdata:/data

  yelb-db:
    image: ${DOCKER_REPO}/yelb-db:${YELB_DB_TAG}
    networks:
      - yelb-network
    # uncomment the following lines if you want to persist postgres data across deployments
    #volumes:
    #  - postgresqldata:/var/lib/postgresql/data

networks:
  yelb-network:
    driver: bridge # a user defined bridge is required; the default bridge network doesn't support name resolution

# uncomment the following lines if you want to persist redis/postgres data across deployments
#volumes:
#   redisdata:
#      driver: local # you can pick another driver depending on the platform you are deploying onto
#   postgresqldata:
#      driver: local # you can pick another driver depending on the platform you are deploying onto
